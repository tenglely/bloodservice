<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blood.bloodservice.dao.UsebloodMapper" >
  <resultMap id="BaseResultMap" type="com.blood.bloodservice.entity.Useblood" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="yid" property="yid" jdbcType="INTEGER" />
    <result column="bid" property="bid" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="udate" property="udate" jdbcType="VARCHAR" />
    <result column="gid" property="gid" jdbcType="INTEGER" />
    <result column="gdate" property="gdate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, yid, bid, state, udate, gid, gdate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.blood.bloodservice.entity.UsebloodExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from use_blood
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from use_blood
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from use_blood
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blood.bloodservice.entity.UsebloodExample" >
    delete from use_blood
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.blood.bloodservice.entity.Useblood" >
    insert into use_blood (id, yid, bid, 
      state, udate, gid, gdate
      )
    values (#{id,jdbcType=INTEGER}, #{yid,jdbcType=INTEGER}, #{bid,jdbcType=INTEGER}, 
      #{state,jdbcType=BIT}, #{udate,jdbcType=VARCHAR}, #{gid,jdbcType=INTEGER}, #{gdate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blood.bloodservice.entity.Useblood" >
    insert into use_blood
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="yid != null" >
        yid,
      </if>
      <if test="bid != null" >
        bid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="udate != null" >
        udate,
      </if>
      <if test="gid != null" >
        gid,
      </if>
      <if test="gdate != null" >
        gdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="yid != null" >
        #{yid,jdbcType=INTEGER},
      </if>
      <if test="bid != null" >
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="udate != null" >
        #{udate,jdbcType=VARCHAR},
      </if>
      <if test="gid != null" >
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="gdate != null" >
        #{gdate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blood.bloodservice.entity.UsebloodExample" resultType="java.lang.Integer" >
    select count(*) from use_blood
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update use_blood
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.yid != null" >
        yid = #{record.yid,jdbcType=INTEGER},
      </if>
      <if test="record.bid != null" >
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=BIT},
      </if>
      <if test="record.udate != null" >
        udate = #{record.udate,jdbcType=VARCHAR},
      </if>
      <if test="record.gid != null" >
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.gdate != null" >
        gdate = #{record.gdate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update use_blood
    set id = #{record.id,jdbcType=INTEGER},
      yid = #{record.yid,jdbcType=INTEGER},
      bid = #{record.bid,jdbcType=INTEGER},
      state = #{record.state,jdbcType=BIT},
      udate = #{record.udate,jdbcType=VARCHAR},
      gid = #{record.gid,jdbcType=INTEGER},
      gdate = #{record.gdate,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blood.bloodservice.entity.Useblood" >
    update use_blood
    <set >
      <if test="yid != null" >
        yid = #{yid,jdbcType=INTEGER},
      </if>
      <if test="bid != null" >
        bid = #{bid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="udate != null" >
        udate = #{udate,jdbcType=VARCHAR},
      </if>
      <if test="gid != null" >
        gid = #{gid,jdbcType=INTEGER},
      </if>
      <if test="gdate != null" >
        gdate = #{gdate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blood.bloodservice.entity.Useblood" >
    update use_blood
    set yid = #{yid,jdbcType=INTEGER},
      bid = #{bid,jdbcType=INTEGER},
      state = #{state,jdbcType=BIT},
      udate = #{udate,jdbcType=VARCHAR},
      gid = #{gid,jdbcType=INTEGER},
      gdate = #{gdate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>