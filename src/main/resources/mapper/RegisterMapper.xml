<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blood.bloodservice.dao.RegisterMapper" >
  <resultMap id="BaseResultMap" type="com.blood.bloodservice.entity.Register" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="bid" property="bid" jdbcType="INTEGER" />
    <result column="rdate" property="rdate" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="WithUserResultMap" type="com.blood.bloodservice.entity.Register" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="bid" property="bid" jdbcType="INTEGER" />
    <result column="rdate" property="rdate" jdbcType="VARCHAR" />
    <association property="people" javaType="com.blood.bloodservice.entity.People">
      <id column="uid" property="uid" jdbcType="INTEGER" />
      <result column="uname" property="uname" jdbcType="VARCHAR" />
      <result column="usex" property="usex" jdbcType="VARCHAR" />
      <result column="uage" property="uage" jdbcType="VARCHAR" />
      <result column="uidentity" property="uidentity" jdbcType="VARCHAR" />
      <result column="uaddress" property="uaddress" jdbcType="VARCHAR" />
      <result column="unation" property="unation" jdbcType="VARCHAR" />
      <result column="uphone" property="uphone" jdbcType="VARCHAR" />
      <result column="uemail" property="uemail" jdbcType="VARCHAR" />
      <result column="ublood" property="ublood" jdbcType="VARCHAR" />
      <result column="bid" property="bid" jdbcType="INTEGER" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uid, bid, rdate
  </sql>
  <sql id="WithUser_Column_List">
    r.id,r.uid,r.bid,r.rdate,p.uid,p.uname, p.usex, p.uage, p.uidentity, p.uaddress, p.unation, p.uphone, p.uemail, p.ublood, p.bid
  </sql>
  <!-- 联表查询 -->
  <select id="selectByPrimaryKeyWithUser" resultMap="WithUserResultMap">
    select
    <include refid="WithUser_Column_List" />
    from register r
    left join people p on r.uid = p.uid
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExampleWithUser" resultMap="WithUserResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithUser_Column_List" />
    from register r
    left join people p on r.uid = p.uid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.blood.bloodservice.entity.RegisterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from register
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from register
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blood.bloodservice.entity.RegisterExample" >
    delete from register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.blood.bloodservice.entity.Register" >
    insert into register (id, uid, bid, 
      rdate)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{bid,jdbcType=INTEGER}, 
      #{rdate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blood.bloodservice.entity.Register" >
    insert into register
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="bid != null" >
        bid,
      </if>
      <if test="rdate != null" >
        rdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="bid != null" >
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="rdate != null" >
        #{rdate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blood.bloodservice.entity.RegisterExample" resultType="java.lang.Integer" >
    select count(*) from register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update register
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.bid != null" >
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.rdate != null" >
        rdate = #{record.rdate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update register
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      bid = #{record.bid,jdbcType=INTEGER},
      rdate = #{record.rdate,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blood.bloodservice.entity.Register" >
    update register
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="bid != null" >
        bid = #{bid,jdbcType=INTEGER},
      </if>
      <if test="rdate != null" >
        rdate = #{rdate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blood.bloodservice.entity.Register" >
    update register
    set uid = #{uid,jdbcType=INTEGER},
      bid = #{bid,jdbcType=INTEGER},
      rdate = #{rdate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>