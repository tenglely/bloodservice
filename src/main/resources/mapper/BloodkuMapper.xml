<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blood.bloodservice.dao.BloodkuMapper" >
  <resultMap id="BaseResultMap" type="com.blood.bloodservice.entity.Bloodku" >
    <id column="bid" property="bid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="btype" property="btype" jdbcType="VARCHAR" />
    <result column="bless" property="bless" jdbcType="VARCHAR" />
    <result column="btime" property="btime" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="bstate" property="bstate" jdbcType="INTEGER" />
    <result column="baddressid" property="baddressid" jdbcType="INTEGER" />
    <result column="yid" property="yid" jdbcType="INTEGER" />
    <result column="inputdate" property="inputdate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bid, uid, cid, amount, btype, bless, btime, state, bstate, baddressid, yid, inputdate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.blood.bloodservice.entity.BloodkuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blood_ku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blood_ku
    where bid = #{bid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blood_ku
    where bid = #{bid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blood.bloodservice.entity.BloodkuExample" >
    delete from blood_ku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="bid" parameterType="com.blood.bloodservice.entity.Bloodku" >
    insert into blood_ku (bid, uid, cid, 
      amount, btype, bless, 
      btime, state, bstate, baddressid, 
      yid, inputdate)
    values (#{bid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, 
      #{amount,jdbcType=DOUBLE}, #{btype,jdbcType=VARCHAR}, #{bless,jdbcType=VARCHAR}, 
      #{btime,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{bstate,jdbcType=INTEGER}, #{baddressid,jdbcType=INTEGER}, 
      #{yid,jdbcType=INTEGER}, #{inputdate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blood.bloodservice.entity.Bloodku" >
    insert into blood_ku
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        bid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="btype != null" >
        btype,
      </if>
      <if test="bless != null" >
        bless,
      </if>
      <if test="btime != null" >
        btime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="bstate != null" >
        bstate,
      </if>
      <if test="baddressid != null" >
        baddressid,
      </if>
      <if test="yid != null" >
        yid,
      </if>
      <if test="inputdate != null" >
        inputdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="btype != null" >
        #{btype,jdbcType=VARCHAR},
      </if>
      <if test="bless != null" >
        #{bless,jdbcType=VARCHAR},
      </if>
      <if test="btime != null" >
        #{btime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="bstate != null" >
        #{bstate,jdbcType=INTEGER},
      </if>
      <if test="baddressid != null" >
        #{baddressid,jdbcType=INTEGER},
      </if>
      <if test="yid != null" >
        #{yid,jdbcType=INTEGER},
      </if>
      <if test="inputdate != null" >
        #{inputdate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blood.bloodservice.entity.BloodkuExample" resultType="java.lang.Integer" >
    select count(*) from blood_ku
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blood_ku
    <set >
      <if test="record.bid != null" >
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.btype != null" >
        btype = #{record.btype,jdbcType=VARCHAR},
      </if>
      <if test="record.bless != null" >
        bless = #{record.bless,jdbcType=VARCHAR},
      </if>
      <if test="record.btime != null" >
        btime = #{record.btime,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=BIT},
      </if>
      <if test="record.bstate != null" >
        bstate = #{record.bstate,jdbcType=INTEGER},
      </if>
      <if test="record.baddressid != null" >
        baddressid = #{record.baddressid,jdbcType=INTEGER},
      </if>
      <if test="record.yid != null" >
        yid = #{record.yid,jdbcType=INTEGER},
      </if>
      <if test="record.inputdate != null" >
        inputdate = #{record.inputdate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blood_ku
    set bid = #{record.bid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      btype = #{record.btype,jdbcType=VARCHAR},
      bless = #{record.bless,jdbcType=VARCHAR},
      btime = #{record.btime,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=BIT},
      bstate = #{record.bstate,jdbcType=INTEGER},
      baddressid = #{record.baddressid,jdbcType=INTEGER},
      yid = #{record.yid,jdbcType=INTEGER},
      inputdate = #{record.inputdate,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blood.bloodservice.entity.Bloodku" >
    update blood_ku
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="btype != null" >
        btype = #{btype,jdbcType=VARCHAR},
      </if>
      <if test="bless != null" >
        bless = #{bless,jdbcType=VARCHAR},
      </if>
      <if test="btime != null" >
        btime = #{btime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="bstate != null" >
        bstate = #{bstate,jdbcType=INTEGER},
      </if>
      <if test="baddressid != null" >
        baddressid = #{baddressid,jdbcType=INTEGER},
      </if>
      <if test="yid != null" >
        yid = #{yid,jdbcType=INTEGER},
      </if>
      <if test="inputdate != null" >
        inputdate = #{inputdate,jdbcType=VARCHAR},
      </if>
    </set>
    where bid = #{bid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blood.bloodservice.entity.Bloodku" >
    update blood_ku
    set uid = #{uid,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      btype = #{btype,jdbcType=VARCHAR},
      bless = #{bless,jdbcType=VARCHAR},
      btime = #{btime,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      bstate = #{bstate,jdbcType=INTEGER},
      baddressid = #{baddressid,jdbcType=INTEGER},
      yid = #{yid,jdbcType=INTEGER},
      inputdate = #{inputdate,jdbcType=VARCHAR}
    where bid = #{bid,jdbcType=INTEGER}
  </update>
</mapper>