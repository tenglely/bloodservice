<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blood.bloodservice.dao.UserloginMapper" >
  <resultMap id="BaseResultMap" type="com.blood.bloodservice.entity.Userlogin" >
    <id column="did" property="did" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="utype" property="utype" jdbcType="VARCHAR" />
    <result column="uemail" property="uemail" jdbcType="VARCHAR" />
    <result column="upassword" property="upassword" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <result column="locked" property="locked" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    did, uid, utype, uemail, upassword, enabled, locked
  </sql>

  <select id="loadUserByUsername" resultType="com.blood.bloodservice.entity.Userlogin">
       select * from user_login where uemail=#{uemail} and utype =#{utype}
   </select>

  <select id="getUserRolesByUid" resultType="com.blood.bloodservice.entity.Role">
        select * from root r,user_root ur where r.rid=ur.rid and ur.uid=#{id}
    </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.blood.bloodservice.entity.UserloginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_login
    where did = #{did,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_login
    where did = #{did,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blood.bloodservice.entity.UserloginExample" >
    delete from user_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="did" parameterType="com.blood.bloodservice.entity.Userlogin" >
    insert into user_login (did, uid, utype, 
      uemail, upassword, enabled, 
      locked)
    values (#{did,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{utype,jdbcType=VARCHAR}, 
      #{uemail,jdbcType=VARCHAR}, #{upassword,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, 
      #{locked,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.blood.bloodservice.entity.Userlogin" >
    insert into user_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="did != null" >
        did,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="utype != null" >
        utype,
      </if>
      <if test="uemail != null" >
        uemail,
      </if>
      <if test="upassword != null" >
        upassword,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="locked != null" >
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="did != null" >
        #{did,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="utype != null" >
        #{utype,jdbcType=VARCHAR},
      </if>
      <if test="uemail != null" >
        #{uemail,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blood.bloodservice.entity.UserloginExample" resultType="java.lang.Integer" >
    select count(*) from user_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_login
    <set >
      <if test="record.did != null" >
        did = #{record.did,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.utype != null" >
        utype = #{record.utype,jdbcType=VARCHAR},
      </if>
      <if test="record.uemail != null" >
        uemail = #{record.uemail,jdbcType=VARCHAR},
      </if>
      <if test="record.upassword != null" >
        upassword = #{record.upassword,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.locked != null" >
        locked = #{record.locked,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_login
    set did = #{record.did,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      utype = #{record.utype,jdbcType=VARCHAR},
      uemail = #{record.uemail,jdbcType=VARCHAR},
      upassword = #{record.upassword,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT},
      locked = #{record.locked,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blood.bloodservice.entity.Userlogin" >
    update user_login
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="utype != null" >
        utype = #{utype,jdbcType=VARCHAR},
      </if>
      <if test="uemail != null" >
        uemail = #{uemail,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        upassword = #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=BIT},
      </if>
    </set>
    where did = #{did,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blood.bloodservice.entity.Userlogin" >
    update user_login
    set uid = #{uid,jdbcType=INTEGER},
      utype = #{utype,jdbcType=VARCHAR},
      uemail = #{uemail,jdbcType=VARCHAR},
      upassword = #{upassword,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      locked = #{locked,jdbcType=BIT}
    where did = #{did,jdbcType=INTEGER}
  </update>
</mapper>